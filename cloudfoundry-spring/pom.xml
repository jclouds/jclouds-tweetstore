<?xml version="1.0" encoding="UTF-8"?>
<!--

    Licensed to jclouds, Inc. (jclouds) under one or more
    contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  jclouds licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.jclouds.tweetstore</groupId>    
        <artifactId>tweetstore-project</artifactId>
        <version>1.7.0-SNAPSHOT</version>
        <relativePath>../project/pom.xml</relativePath>
    </parent>
    <artifactId>tweetstore-cloudfoundry-spring</artifactId>
    <packaging>war</packaging>
    <name>jclouds :: TweetStore :: Cloud Foundry :: Spring</name>
    <description>jclouds TweetStore for Cloud Foundry using Spring for Dependency Injection</description>

    <properties>
        <cloudfoundry.version>1.0.1</cloudfoundry.version>
        <cloudfoundry.target>https://api.run.pivotal.io</cloudfoundry.target>
        <cloudfoundry.applicationid>jclouds-tweetstore</cloudfoundry.applicationid>
        <cloudfoundry.address>${cloudfoundry.applicationid}.cfapps.io</cloudfoundry.address>
        <test.cloudfoundry.target>${cloudfoundry.target}</test.cloudfoundry.target>
        <test.cloudfoundry.address>test-${cloudfoundry.address}</test.cloudfoundry.address>
        <test.cloudfoundry.port>80</test.cloudfoundry.port>
        <jclouds.tweetstore.container>jclouds-cf-tweetstore-spring</jclouds.tweetstore.container>
    </properties>

    <dependencies>
        <!-- ensure this matches the version of Spring imported by cloudfoundry-runtime -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>3.2.2.RELEASE</version>
            <!-- using the SLF4J/commons-logging bridge -->
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>3.2.2.RELEASE</version>
        </dependency>
        <dependency>
            <groupId>cglib</groupId>
            <artifactId>cglib-nodep</artifactId>
            <version>2.2</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.quartz-scheduler</groupId>
            <artifactId>quartz</artifactId>
            <version>2.1.3</version>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
                
        <!-- Cloud Foundry API -->
        <dependency>
            <groupId>org.cloudfoundry</groupId>
            <artifactId>cloudfoundry-runtime</artifactId>
            <version>0.8.6</version>
        </dependency>
        <dependency>
            <groupId>org.cloudfoundry</groupId>
            <artifactId>cloudfoundry-client-lib</artifactId>
            <version>${cloudfoundry.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.codehaus.plexus</groupId>
            <artifactId>plexus-archiver</artifactId>
            <version>2.1.1</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <repositories>
        <repository>
            <id>org.springframework.maven.milestone</id>
            <url>http://maven.springframework.org/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>

    <profiles>
        <profile>
            <id>live</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>integration</id>
                                <phase>integration-test</phase>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <configuration>
                                    <systemPropertyVariables>
                                        <test.twitter.consumer.identity>${test.twitter.gae-tweetstore-spring.consumer.identity}</test.twitter.consumer.identity>
                                        <test.twitter.consumer.credential>${test.twitter.gae-tweetstore-spring.consumer.credential}</test.twitter.consumer.credential>
                                        <test.twitter.access.identity>${test.twitter.gae-tweetstore-spring.access.identity}</test.twitter.access.identity>
                                        <test.twitter.access.credential>${test.twitter.gae-tweetstore-spring.access.credential}</test.twitter.access.credential>
                                        <test.azureblob.identity>${test.azureblob.identity}</test.azureblob.identity>
                                        <test.azureblob.credential>${test.azureblob.credential}</test.azureblob.credential>
                                        <test.cloudfiles-us.identity>${test.cloudfiles-us.identity}</test.cloudfiles-us.identity>
                                        <test.cloudfiles-us.credential>${test.cloudfiles-us.credential}</test.cloudfiles-us.credential>
                                        <test.aws-s3.identity>${test.aws-s3.identity}</test.aws-s3.identity>
                                        <test.aws-s3.credential>${test.aws-s3.credential}</test.aws-s3.credential>
                                        <test.cloudonestorage.identity>${test.cloudonestorage.identity}</test.cloudonestorage.identity>
                                        <test.cloudonestorage.credential>${test.cloudonestorage.credential}</test.cloudonestorage.credential>
                                        <test.ninefold-storage.identity>${test.ninefold-storage.identity}</test.ninefold-storage.identity>
                                        <test.ninefold-storage.credential>${test.ninefold-storage.credential}</test.ninefold-storage.credential>
                                        <cloudfoundry.address>${test.cloudfoundry.address}</cloudfoundry.address>
                                        <cloudfoundry.port>${test.cloudfoundry.port}</cloudfoundry.port>
                                        <cloudfoundry.target>${test.cloudfoundry.target}</cloudfoundry.target>
                                        <cloudfoundry.username>${cloudfoundry.username}</cloudfoundry.username>
                                        <cloudfoundry.password>${cloudfoundry.password}</cloudfoundry.password>
                                        <jclouds.tweetstore.blobstores>${jclouds.tweetstore.blobstores}</jclouds.tweetstore.blobstores>
                                        <jclouds.tweetstore.container>test.${jclouds.tweetstore.container}</jclouds.tweetstore.container>
                                        <warfile>${project.build.directory}/${project.build.finalName}</warfile>
                                    </systemPropertyVariables>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        <profile>
            <id>deploy</id>
            <properties>
                <!-- classifier to choose the correct jclouds.properties file -->
                <tweetstore.instance>cf-tweetstore-spring</tweetstore.instance>
            </properties>
            <pluginRepositories>
                <pluginRepository>
                    <id>org.springframework.maven.milestone</id>
                    <url>http://maven.springframework.org/milestone</url>
                    <snapshots>
                        <enabled>false</enabled>
                    </snapshots>
                </pluginRepository>
            </pluginRepositories>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.cloudfoundry</groupId>
                        <artifactId>cf-maven-plugin</artifactId>
                        <version>${cloudfoundry.version}</version>
                        <configuration>
                            <target>${cloudfoundry.target}</target>
                            <username>${cloudfoundry.username}</username>
                            <password>${cloudfoundry.password}</password>
                            <org>jclouds</org>
                            <space>development</space>
                            <appname>${cloudfoundry.applicationid}</appname>
                            <!-- default value ${project.build.directory}/${project.build.finalName}.war finds the WAR downloaded from the repo -->
                            <path>${project.build.directory}/${project.artifactId}.war</path>
                            <url>${cloudfoundry.address}</url>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
